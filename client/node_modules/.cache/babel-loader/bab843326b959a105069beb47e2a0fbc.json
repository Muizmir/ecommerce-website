{"ast":null,"code":"'use strict';\n\nvar path = require('path');\n\nvar Core = require('css-modules-loader-core');\n\nvar stringHash = require('string-hash');\n\nvar stringifyObject = require('stringify-object');\n\nfunction escapeCss(css) {\n  return JSON.stringify(css);\n}\n\nfunction hash(str) {\n  return '_' + stringHash(str).toString(36);\n}\n\nfunction generateHashName(styleName, fileName) {\n  return hash(fileName + ':' + styleName);\n}\n\nfunction generateDebugName(styleName, fileName) {\n  var sanitisedPath = fileName.replace(/\\.[^\\.\\/\\\\]+$/, '').replace(/[\\W_]+/g, '_').replace(/^_|_$/g, '');\n  return '_' + sanitisedPath + '__' + styleName;\n}\n\nfunction wrapCss(fileName, css, options, map) {\n  var escapedCss = escapeCss(css);\n  var stringifiedMap = stringifyObject(map);\n  var packagePath = path.join(__dirname, '..');\n  var dirName = path.dirname(fileName);\n  var requirePath = path.relative(dirName, packagePath); // On Windows, path.relative returns unescaped backslashes and\n  // that causes cssify to not be findable.\n\n  requirePath = requirePath.replace(/\\\\/g, '/');\n  var moduleSource = options['auto-inject'] ? ['var inject = require(\\'./' + requirePath + '\\');', 'var css = ' + escapedCss + ';', 'inject(css, undefined, \\'' + hash(fileName) + '\\');', options.modules ? 'module.exports = ' + stringifiedMap + ';' : 'module.exports = css;'].join('\\n') + '\\n' : options.modules ? 'module.exports = { css: ' + escapedCss + ', map: ' + stringifiedMap + ' };\\n' : 'module.exports = ' + escapedCss + ';\\n';\n  return moduleSource;\n}\n\nfunction processCss(fileName, source, options) {\n  if (options.modules) {\n    Core.scope.generateScopedName = options.debug ? generateDebugName : generateHashName;\n    var core = new Core();\n    return core.load(source, path.relative(process.cwd(), fileName)).then(function (result) {\n      return wrapCss(fileName, result.injectableSource, options, result.exportTokens);\n    });\n  }\n\n  return Promise.resolve(wrapCss(fileName, source, options));\n}\n\nmodule.exports = processCss;","map":null,"metadata":{},"sourceType":"script"}