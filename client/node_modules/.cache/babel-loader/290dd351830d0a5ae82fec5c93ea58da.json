{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nvar _postcss = require('postcss');\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _postcssModulesLocalByDefault = require('postcss-modules-local-by-default');\n\nvar _postcssModulesLocalByDefault2 = _interopRequireDefault(_postcssModulesLocalByDefault);\n\nvar _postcssModulesExtractImports = require('postcss-modules-extract-imports');\n\nvar _postcssModulesExtractImports2 = _interopRequireDefault(_postcssModulesExtractImports);\n\nvar _postcssModulesScope = require('postcss-modules-scope');\n\nvar _postcssModulesScope2 = _interopRequireDefault(_postcssModulesScope);\n\nvar _postcssModulesValues = require('postcss-modules-values');\n\nvar _postcssModulesValues2 = _interopRequireDefault(_postcssModulesValues);\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar Core = function () {\n  function Core(plugins) {\n    _classCallCheck(this, Core);\n\n    this.plugins = plugins || Core.defaultPlugins;\n  } // These four plugins are aliased under this package for simplicity.\n\n\n  _createClass(Core, [{\n    key: 'load',\n    value: function load(sourceString, sourcePath, trace, pathFetcher) {\n      var parser = new _parser2['default'](pathFetcher, trace);\n      return (0, _postcss2['default'])(this.plugins.concat([parser.plugin])).process(sourceString, {\n        from: \"/\" + sourcePath\n      }).then(function (result) {\n        return {\n          injectableSource: result.css,\n          exportTokens: parser.exportTokens\n        };\n      });\n    }\n  }]);\n\n  return Core;\n}();\n\nexports['default'] = Core;\nCore.values = _postcssModulesValues2['default'];\nCore.localByDefault = _postcssModulesLocalByDefault2['default'];\nCore.extractImports = _postcssModulesExtractImports2['default'];\nCore.scope = _postcssModulesScope2['default'];\nCore.defaultPlugins = [_postcssModulesValues2['default'], _postcssModulesLocalByDefault2['default'], _postcssModulesExtractImports2['default'], _postcssModulesScope2['default']];\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}