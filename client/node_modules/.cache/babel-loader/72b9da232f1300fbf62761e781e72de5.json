{"ast":null,"code":"'use strict';\n\nvar assign = require('lodash.assign');\n\nvar cssRE = /\\.css$/i;\nvar RegExpRE = /^\\/(.*)\\/(.*)$/;\n\nfunction normalize(opts) {\n  opts = assign({}, opts);\n\n  if (typeof opts['auto-inject'] === 'undefined') {\n    opts['auto-inject'] = true;\n  }\n\n  if (opts['no-auto-inject']) {\n    opts['auto-inject'] = false;\n    delete opts['no-auto-inject'];\n  }\n\n  if (opts.test) {\n    if (typeof opts.test === 'string') {\n      opts.test = stringToRegExp(opts.test);\n    }\n  } else {\n    opts.test = cssRE;\n  }\n\n  return opts;\n}\n\nfunction skipIt(fileName, opts) {\n  if (typeof opts.test === 'function') {\n    if (!opts.test(fileName)) {\n      return true;\n    }\n  } else if (opts.test instanceof RegExp) {\n    if (!opts.test.test(fileName)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction stringToRegExp(str) {\n  var match = RegExpRE.exec(str);\n  if (!match) return;\n  var re = match[1];\n  var flags = match[2];\n  return new RegExp(re, flags);\n}\n\nexports.normalize = normalize;\nexports.skipIt = skipIt;\nexports.stringToRegExp = stringToRegExp;","map":null,"metadata":{},"sourceType":"script"}