{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Muiz\\\\Desktop\\\\web\\\\ecommerce-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeEvery,call,put,all}from'redux-saga/effects';import ShopActionTypes from'./shop.types';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';import{fetchCollectionsFailure,fetchCollectionsSuccess}from'./shop.actions';export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection('collections');_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionsMap=_context.sent;_context.next=10;return put(fetchCollectionsSuccess(collectionsMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionsFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/Users/Muiz/Desktop/web/ecommerce-website/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeEvery","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"6NAKiBA,qB,iDAWAC,qB,iDAIAC,S,EApBjB,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,GAA1B,CAA+BC,GAA/B,KAA0C,oBAA1C,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,SAAT,CAAoBC,+BAApB,KAA2D,+BAA3D,CACA,OAASC,uBAAT,CAAkCC,uBAAlC,KAAgE,gBAAhE,CAEA,MAAO,SAAUX,CAAAA,qBAAV,2LAEOY,aAFP,CAEuBJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAFvB,iBAGkB,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAHlB,OAGOC,QAHP,+BAIwB,MAAMX,CAAAA,IAAI,CAACK,+BAAD,CAAkCM,QAAlC,CAAV,CAJxB,OAIOC,cAJP,gCAKC,MAAMX,CAAAA,GAAG,CAACM,uBAAuB,CAACK,cAAD,CAAxB,CAAT,CALD,0GAOC,MAAMX,CAAAA,GAAG,CAACK,uBAAuB,CAAC,YAAMO,OAAP,CAAxB,CAAT,CAPD,qEAWP,MAAO,SAAUhB,CAAAA,qBAAV,qJACH,MAAME,CAAAA,SAAS,CAACI,eAAe,CAACW,uBAAjB,CAA0ClB,qBAA1C,CAAf,CADG,wDAIP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADG","sourcesContent":["import { takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsFailure, fetchCollectionsSuccess} from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get()\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    }catch(error){\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([call(fetchCollectionsStart)])\r\n}"]},"metadata":{},"sourceType":"module"}