{"ast":null,"code":"\"use strict\";\n\nvar regexpu = require(\"regexpu-core\");\n\nvar identifierEscapeRegexp = new RegExp(regexpu(\"(^[^A-Za-z_\\\\-\\\\u{00a0}-\\\\u{10ffff}]|^--|[^A-Za-z_0-9\\\\-\\\\u{00a0}-\\\\u{10ffff}])\", \"ug\"), \"g\");\n\nfunction escape(str, identifier) {\n  if (str === \"*\") {\n    return \"*\";\n  }\n\n  if (identifier) {\n    return str.replace(identifierEscapeRegexp, \"\\\\$1\");\n  } else {\n    return str.replace(/(^[^A-Za-z_\\\\-]|^--|[^A-Za-z_0-9\\\\-])/g, \"\\\\$1\");\n  }\n}\n\nfunction stringifyWithoutBeforeAfter(tree) {\n  switch (tree.type) {\n    case \"selectors\":\n      return tree.nodes.map(stringify).join(\",\");\n\n    case \"selector\":\n      return tree.nodes.map(stringify).join(\"\");\n\n    case \"element\":\n      return (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + escape(tree.name);\n\n    case \"class\":\n      return \".\" + escape(tree.name, true);\n\n    case \"id\":\n      return \"#\" + escape(tree.name, true);\n\n    case \"attribute\":\n      return \"[\" + tree.content + \"]\";\n\n    case \"spacing\":\n      return tree.value;\n\n    case \"pseudo-class\":\n      return \":\" + escape(tree.name) + (typeof tree.content === \"string\" ? \"(\" + tree.content + \")\" : \"\");\n\n    case \"nested-pseudo-class\":\n      return \":\" + escape(tree.name) + \"(\" + tree.nodes.map(stringify).join(\",\") + \")\";\n\n    case \"pseudo-element\":\n      return \"::\" + escape(tree.name);\n\n    case \"universal\":\n      return (typeof tree.namespace === \"string\" ? escape(tree.namespace) + \"|\" : \"\") + \"*\";\n\n    case \"operator\":\n      return tree.operator;\n\n    case \"comment\":\n      return \"/*\" + tree.content + \"*/\";\n\n    case \"invalid\":\n      return tree.value;\n  }\n}\n\nfunction stringify(tree) {\n  var str = stringifyWithoutBeforeAfter(tree);\n\n  if (tree.before) {\n    str = tree.before + str;\n  }\n\n  if (tree.after) {\n    str = str + tree.after;\n  }\n\n  return str;\n}\n\nmodule.exports = stringify;","map":null,"metadata":{},"sourceType":"script"}